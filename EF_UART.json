{
  "info": {
    "name": "EF_UART",
    "description": "A Universal Asynchronous Receiver Transmitter",
    "repo": "https://github.com/efabless/EF_UART.git",
    "owner": "Efabless Corp.",
    "license": "APACHE 2.0",
    "author": "Mohamed Shalan",
    "email": "mshalan@aucegypt.edu",
    "version": "v1.0.0",
    "date": "11-1-2024",
    "category": "digital",
    "tags": [
      "peripheral",
      "UART",
      "serial"
    ],
    "bus": [
      "generic"
    ],
    "type\"": "soft",
    "status": "verified",
    "cell_count": "690",
    "width\"": "0.0",
    "height\"": "0.0",
    "technology": "n/a",
    "clock_freq_mhz": "10",
    "digital_supply_voltage": "n/a",
    "analog_supply_voltage": "n/a"
  },
  "parameters": [
    {
      "name": "SC",
      "default": 8,
      "description": "Number of samples per bit/baud"
    },
    {
      "name": "MDW",
      "default": 9,
      "description": "Max data size/width"
    },
    {
      "name": "GFLEN",
      "default": 8,
      "description": "Length (number of stages) of the glitch filter"
    },
    {
      "name": "FAW",
      "default": 4,
      "description": "FIFO Address width; Depth=2^AW"
    }
  ],
  "ports": [
    {
      "name": "prescaler",
      "width": 16,
      "direction": "input"
    },
    {
      "name": "en",
      "width": 1,
      "direction": "input"
    },
    {
      "name": "tx_en",
      "width": 1,
      "direction": "input"
    },
    {
      "name": "rx_en",
      "width": 1,
      "direction": "input"
    },
    {
      "name": "wdata",
      "width": "MDW",
      "direction": "input"
    },
    {
      "name": "timeout_bits",
      "width": 6,
      "direction": "input"
    },
    {
      "name": "loopback_en",
      "width": 1,
      "direction": "input"
    },
    {
      "name": "glitch_filter_en",
      "width": 1,
      "direction": "input"
    },
    {
      "name": "tx_level",
      "width": "FAW",
      "direction": "output"
    },
    {
      "name": "rx_level",
      "width": "FAW",
      "direction": "output"
    },
    {
      "name": "rd",
      "width": 1,
      "direction": "input"
    },
    {
      "name": "wr",
      "width": 1,
      "direction": "input"
    },
    {
      "name": "data_size",
      "width": 4,
      "direction": "input"
    },
    {
      "name": "stop_bits_count",
      "width": 1,
      "direction": "input"
    },
    {
      "name": "parity_type",
      "width": 3,
      "direction": "input"
    },
    {
      "name": "txfifotr",
      "width": "FAW",
      "direction": "input"
    },
    {
      "name": "rxfifotr",
      "width": "FAW",
      "direction": "input"
    },
    {
      "name": "match_data",
      "width": "MDW",
      "direction": "input"
    },
    {
      "name": "tx_empty",
      "width": 1,
      "direction": "output"
    },
    {
      "name": "tx_full",
      "width": 1,
      "direction": "output"
    },
    {
      "name": "tx_level_below",
      "width": 1,
      "direction": "output"
    },
    {
      "name": "rdata",
      "width": "MDW",
      "direction": "output"
    },
    {
      "name": "rx_empty",
      "width": 1,
      "direction": "output"
    },
    {
      "name": "rx_full",
      "width": 1,
      "direction": "output"
    },
    {
      "name": "rx_level_above",
      "width": 1,
      "direction": "output"
    },
    {
      "name": "break_flag",
      "width": 1,
      "direction": "output"
    },
    {
      "name": "match_flag",
      "width": 1,
      "direction": "output"
    },
    {
      "name": "frame_error_flag",
      "width": 1,
      "direction": "output"
    },
    {
      "name": "parity_error_flag",
      "width": 1,
      "direction": "output"
    },
    {
      "name": "overrun_flag",
      "width": 1,
      "direction": "output"
    },
    {
      "name": "timeout_flag",
      "width": 1,
      "direction": "output"
    }
  ],
  "external_interface": [
    {
      "name": "rx",
      "port": "rx",
      "direction": "input",
      "width": 1
    },
    {
      "name": "tx",
      "port": "tx",
      "direction": "output",
      "width": 1
    }
  ],
  "clock": {
    "name": "clk"
  },
  "reset": {
    "name": "rst_n",
    "level": 0
  },
  "registers": [
    {
      "name": "RXDATA",
      "size": "MDW",
      "mode": "r",
      "fifo": "yes",
      "offset": 0,
      "bit_access": "no",
      "read_port": "rdata",
      "description": "RX Data register; the interface to the Receive FIFO."
    },
    {
      "name": "TXDATA",
      "size": "MDW",
      "mode": "w",
      "fifo": "yes",
      "offset": 4,
      "bit_access": "no",
      "write_port": "wdata",
      "description": "TX Data register; ; the interface to the Receive FIFO."
    },
    {
      "name": "PR",
      "size": 16,
      "mode": "w",
      "fifo": "no",
      "offset": 12,
      "bit_access": "no",
      "write_port": "prescaler",
      "description": "The Prescaler register; used to determine the baud rate. $baud_rate = clock_freq/((PR+1)*16)$."
    },
    {
      "name": "CTRL",
      "size": 5,
      "mode": "w",
      "fifo": "no",
      "offset": 8,
      "bit_access": "no",
      "description": "UART Control Register",
      "fields": [
        {
          "name": "en",
          "bit_offset": 0,
          "bit_width": 1,
          "write_port": "en",
          "description": "UART enable"
        },
        {
          "name": "txen",
          "bit_offset": 1,
          "bit_width": 1,
          "write_port": "tx_en",
          "description": "UART Transmitter enable"
        },
        {
          "name": "rxen",
          "bit_offset": 2,
          "bit_width": 1,
          "write_port": "rx_en",
          "description": "UART Receiver enable"
        },
        {
          "name": "lpen",
          "bit_offset": 3,
          "bit_width": 1,
          "write_port": "loopback_en",
          "description": "Loopback (connect RX and TX pins together) enable"
        },
        {
          "name": "gfen",
          "bit_offset": 4,
          "bit_width": 1,
          "write_port": "glitch_filter_en",
          "description": "UART Glitch Filer on RX enable"
        }
      ]
    },
    {
      "name": "CFG",
      "size": 14,
      "mode": "w",
      "fifo": "no",
      "offset": 16,
      "bit_access": "no",
      "init": "'h3F08",
      "description": "UART Configuration Register",
      "fields": [
        {
          "name": "wlen",
          "bit_offset": 0,
          "bit_width": 4,
          "write_port": "data_size",
          "description": "Data word length: 5-9 bits"
        },
        {
          "name": "stp2",
          "bit_offset": 4,
          "bit_width": 1,
          "write_port": "stop_bits_count",
          "description": "Two Stop Bits Select"
        },
        {
          "name": "parity",
          "bit_offset": 5,
          "bit_width": 3,
          "write_port": "parity_type",
          "description": "Parity Type: 000: None, 001: odd, 010: even, 100: Sticky 0, 101: Sticky 1"
        },
        {
          "name": "timeout",
          "bit_offset": 8,
          "bit_width": 6,
          "write_port": "timeout_bits",
          "description": "Receiver Timeout measured in number of bits"
        }
      ]
    },
    {
      "name": "FIFOCTRL",
      "size": 16,
      "mode": "w",
      "fifo": "no",
      "offset": 20,
      "bit_access": "no",
      "description": "FIFO Control Register",
      "fields": [
        {
          "name": "TXLT",
          "bit_offset": 0,
          "bit_width": "FAW",
          "write_port": "txfifotr",
          "description": "Transmit FIFO Level Threshold"
        },
        {
          "name": "RXLT",
          "bit_offset": 8,
          "bit_width": "FAW",
          "write_port": "rxfifotr",
          "description": "Receive FIFO Level Threshold"
        }
      ]
    },
    {
      "name": "FIFOS",
      "size": 16,
      "mode": "r",
      "fifo": "no",
      "offset": 24,
      "bit_access": "no",
      "description": "FIFO Status Register",
      "fields": [
        {
          "name": "RXL",
          "bit_offset": 0,
          "bit_width": "FAW",
          "read_port": "rx_level",
          "description": "Receive FIFO Level"
        },
        {
          "name": "TXL",
          "bit_offset": 8,
          "bit_width": "FAW",
          "read_port": "tx_level",
          "description": "Transmit FIFO Level"
        }
      ]
    },
    {
      "name": "MATCH",
      "size": "MDW",
      "mode": "w",
      "fifo": "no",
      "offset": 28,
      "bit_access": "no",
      "write_port": "match_data",
      "description": "Match Register"
    }
  ],
  "flags": [
    {
      "name": "TXE",
      "port": "tx_empty",
      "description": "Transmit FIFO is Empty."
    },
    {
      "name": "RXF",
      "port": "rx_full",
      "description": "Receive FIFO is Full."
    },
    {
      "name": "TXB",
      "port": "tx_level_below",
      "description": "Transmit FIFO level is Below Threshold."
    },
    {
      "name": "RXA",
      "port": "rx_level_above",
      "description": "Receive FIFO level is Above Threshold."
    },
    {
      "name": "BRK",
      "port": "break_flag",
      "description": "Line Break; 13 consecutive 0's have been detected on the line."
    },
    {
      "name": "MATCH",
      "port": "match_flag",
      "description": "Match; the receive data matches the MATCH register."
    },
    {
      "name": "FE",
      "port": "frame_error_flag",
      "description": "Framing Error; the receiver does not see a \"stop\" bit at the expected \"stop\" bit time."
    },
    {
      "name": "PRE",
      "port": "parity_error_flag",
      "description": "Parity Error; the receiver calculated parity does not match the received one."
    },
    {
      "name": "OR",
      "port": "overrun_flag",
      "description": "Overrun; data has been received but the RX FIFO is full."
    },
    {
      "name": "RTO",
      "port": "timeout_flag",
      "description": "Receiver Timeout; no data has been received for the time of a specified number of bits."
    }
  ],
  "fifos": [
    {
      "type": "read",
      "width": "MDW",
      "depth": 16,
      "register": "RXDATA",
      "data_port": "rdata",
      "control_port": "rd"
    },
    {
      "type": "write",
      "width": "MDW",
      "depth": 16,
      "register": "TXDATA",
      "data_port": "wdata",
      "control_port": "wr"
    }
  ]
}